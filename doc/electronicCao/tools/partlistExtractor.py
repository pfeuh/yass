#!/usr/bin/python
# -*- coding: utf-8 -*-

# TODO: see why T2 has not the same footprint as T1, T3, T4, T5

import xml.etree.ElementTree as ET
import sys
import os
import time

TAB = "    "
NB_COLUMNS = 8
LF = "\n"

class PARTS:
    def __init__(self):
        self.__dico = {}
        
    def addPart(self, key, value):
        key = key.upper().strip()
        value = value.strip()
        if key in self.__dico.keys():
            self.__dico[key].append(value)
        else:
            self.__dico[key] = [value]
            
    def getParts(self):
        return self.__dico

def getParts(fname):
    temp_parts = PARTS()
    xml_root = ET.parse(fname).getroot()
    for element in xml_root:
        if element.tag == "components":
            for component in element:
                name = component.get("ref")
                found = False
                for property in component:
                    if property.tag == "value":
                        found = True
                        value = property.text
                        temp_parts.addPart(value, name)
                if not found:
                    temp_parts.addPart("???", name)
    return temp_parts.getParts()

def getRichTitle(title):
    lines = []
    for x in range(3):
        line = "/*"
        if x == 1:
            line += " " + title + " */" + LF
        else:
            line += "*" * (len(title) + 2) + "*/" + LF
        lines.append(line)
    return "".join(lines)

def toStringPart (key, values):
    lines = []
    lines.append(key + LF)
    for idx, value in enumerate(values):
        if not (idx % NB_COLUMNS):
            words = []
            
        if idx == (len(values) -1):
            words += "%s "%value
        else:
            words += "%s, "%value
            
        if (idx % NB_COLUMNS) == (NB_COLUMNS - 1):
            lines.append(TAB + "".join(words) + LF)
            words = []
    if words != []:
        lines.append(TAB + "".join(words) + LF)
        words = []
    return "".join(lines)

def getTimestamp():
    now = time.localtime()
    return "%04u/%02u/%02u %02u:%02u:%02u"%(now.tm_year, now.tm_mon, now.tm_mday, now.tm_hour, now.tm_min, now.tm_sec)

def getDico(fname):
    with open(fname) as fp:
        lines = fp.readlines()
    lines = [line.strip() for line in lines]
    dico = {}
    for line in lines:
        if len(line):
            words = [word.strip() for word in line.split("=")]
            if len(words) == 1:
                dico[words[0]] = words[0]
            elif len(words) == 2:
                if words[1] != "hidden":
                    dico[words[0]] = words[1]
                else:
                    dico[words[0]] = None
    return dico

if __name__ == "__main__":

    if len(sys.argv) == 1:
        raise Exception ("No filename in script's arguments!\n")
    fname = sys.argv[1]
    dico = getDico("dico.txt")
    
    for key in dico.keys():
        print key, dico[key]
    
    TITLE = os.path.splitext(os.path.basename(sys.argv[1]))[0]

    parts = getParts(sys.argv[1])
    
    print(getRichTitle(TITLE))
    print("// generated by %s"%(sys.argv[0]))
    print("// on %s%s"%(getTimestamp(), LF))

    keys = [key for key in parts.keys()]
    keys.sort()
    for key in keys:
        new_key = dico[key]
        if new_key != None:
            print(toStringPart(new_key, parts[key]))

    for key in keys:
        new_key = dico[key]
        if new_key != None:
            print("%3u %s"%(len(parts[key]), new_key))


                        
                    